@using Spacetime.Core.Services
@using Spacetime.Shared.Components
@using Spacetime.Shared.Components.Containers.Modal
@using Spacetime.Shared.Components.Containers.Tabs
@using Spacetime.Shared.Components.Inputs
@inject IJSRuntime JS
@inject SettingsService SettingsService
@inject IDialogService DialogService


@inherits LayoutComponentBase

<div class="flex flex-col">
    <MudAppBar Color="Color.Dark" Fixed="false" Dense="true" Elevation="1">
        <MudImage ObjectFit="ObjectFit.Contain" Height="40" Width="40" Src="images/logo.png" />
        <NavLink href="" class="ml-4" Match="NavLinkMatch.All">
            <MudButton DisableElevation="true" Color="Color.Inherit">Requests</MudButton>
        </NavLink>
        <NavLink href="protobufs" class="ml-4">
            <MudButton DisableElevation="true" Color="Color.Inherit">Protobufs</MudButton>
        </NavLink>
        <MudSpacer />
        <a href="https://github.com/getspacetime/spacetime">
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" />
        </a>
        <MudIconButton Icon="@Icons.Filled.Settings" Color="Color.Inherit" OnClick="OpenSettings" />

    </MudAppBar>

    <div class="pt-1 flex flex-row">
        <div class="grow">
            @Body
        </div>
    </div>

    <MudThemeProvider IsDarkMode="true" />
    <MudDialogProvider />
    <MudSnackbarProvider />
</div>

@code {
    public async Task OpenSettings()
    {
        var options = new DialogOptions { MaxWidth = MaxWidth.Medium, FullWidth = true };
        DialogService.Show<SettingsDialog>("Settings", options);
    }
}