@inject IJSRuntime JS

<!-- figure out how to have dynamic sizes here -->
<div id='editor' @ref="_elementRef" style="height: 590px" ></div>
@code {
    private bool _rendered;

    [Parameter]
    public string Data { get; set; }
    private ElementReference _elementRef;

    protected override async void OnAfterRender(bool firstRender)
    {
        if (_rendered)
        {
            // we don't need to re-initialize the editor after it's been 
            // rendered once
            return;
        }

        _rendered = true;
        await JS.InvokeVoidAsync("editor", _elementRef, Data);
    }

    protected override async void OnParametersSet()
    {
        if (_rendered)
        {
            // update the editor whenever the parameter changes
            // only update once it's been rendered, though

            try
            {
                await JS.InvokeVoidAsync("updateEditor", _elementRef, Data);
            }
            catch (Exception ex)
            {
                // todo: fall back to a basic editor?
            }
        }

    }
}
