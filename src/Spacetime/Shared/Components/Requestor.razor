@using Spacetime.Core
@using Spacetime.Shared.Components
@inject SpacetimeService SpacetimeService
@inject RequestService RequestService

<div class="flex" style="overflow: hidden">
    <div class="basis-1/3 shrink-0">
        <div class="flex flex-row mb-2 shrink-0">
            <select name="method" @bind="Request.Method" class=" bg-zinc-800">
                <option>--select--</option>
                <option value="get">GET</option>
                <option value="post">POST</option>
            </select>
            <input class="px-4 py-2 w-5/6 border border-zinc-700 bg-zinc-800" placeholder="https://localhost:44301/api/tickets" type="text" @bind="Request.URL" @onblur="Save" />
            <Button OnClickCallback="@Execute">@ExecuteText</Button>
        </div>
        <div class="flex flex-row mb-2 border-bottom border-zinc-700">
            <Button>Body</Button>
            <Button>Auth</Button>
            <Button>Query</Button>
            <Button>Header</Button>
        </div>
        <div>
            <Code Data="@string.Empty"></Code>
        </div>
    </div>
    <div class="basis-2/3 ml-2">
        <div class="flex flex-row mb-2 border-bottom border-zinc-700">
            <div class="bg-green-600 text-zinc-100 p-2">@Request.StatusCode</div>
            <div class="bg-slate-600 text-zinc-100 p-2 ml-2">@Request.ResponseTimeText</div>
        </div>
        <div class="flex flex-row mb-2">
            <Button OnClickCallback="@(() => Tab = "preview")">Preview</Button>
            <Button OnClickCallback="@(() => Tab = "headers")">Headers</Button>
        </div>
        @if (Tab == "preview")
        {
            <div class="border border-zinc-700">
                <Code Data="@Request.ResponseBody"></Code>
            </div>
        }
        @if (Tab == "headers")
        {
            <div class="border border-zinc-700" style="height: 600px; width: 600px">
                <table class="table-auto">
                    @if (Request.Headers != null)
                    {
                        <tbody>
                            @foreach (var header in Request?.Headers)
                            {
                                <tr>
                                    <td>@header.Name</td>
                                    <td>@header.Value</td>
                                </tr>
                            }
                        </tbody>
                    }
                    else
                    {
                        <tbody>
                            <tr><td>These aren't the headers you're looking for</td></tr>
                        </tbody>
                    }
                </table>
            </div>
        }
    </div>
</div>
@code {
    private string Tab { get; set; } = "preview";
    private bool Loading { get; set; }

    [Parameter]
    public SpacetimeRequest Request { get; set; }

    private string ExecuteText => !Loading ? "Execute" : "Loading...";

    private async Task Save()
    {
        try
        {
            await RequestService.UpdateRequest(Request);
        }
        catch (Exception ex)
        {
            // todo: handle this?
        }
    }

    private async Task Execute()
    {
        ClearResponse();

        if (string.IsNullOrWhiteSpace(Request.URL))
        {
            return;
        }

        try
        {
            Loading = true;

            var response = await SpacetimeService.Execute(Request);

            Request.ResponseBody = response.ResponseBody;
            Request.ElapsedMs = response.ElapsedMs;
            Request.Headers = response.Headers;
            //Request.StatusCode = response.Status;
        }
        catch (Exception ex)
        {
            Request.ResponseBody = $"Unknown error {ex.Message}";
        }
        finally
        {
            Loading = false;
        }

        await Save();
    }

    private void ClearAll()
    {
        Request.URL = string.Empty;
        Request.RequestBody = string.Empty;

        ClearResponse();
    }

    private void ClearResponse()
    {
        Request.ResponseBody = "No response.";
    }
}