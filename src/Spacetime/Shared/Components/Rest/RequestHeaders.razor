@using Spacetime.Core
@using Spacetime.Shared.Components.Typography
@using Spacetime.Shared.Components.Inputs
@using Spacetime.Core.Infrastructure;
<div class="flex flex-col w-full">
    <MudTable Items="Headers" Hover="true">
        <HeaderContent>
            <MudTh>Header</MudTh>
            <MudTh>Value</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Value">@context.Value</MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <MudTd DataLabel="Name">
                <MudTextField @bind-Value="@context.Name" />
            </MudTd>
            <MudTd DataLabel="Value">
                <MudTextField @bind-Value="@context.Value" />
            </MudTd>
        </RowEditingTemplate>
    </MudTable>
    <MudButton OnClick="Add" Color="Color.Primary">Add header</MudButton>
</div>
@code {

    [Parameter]
    public List<HeaderDto> Headers { get; set; }
    [Parameter]
    public EventCallback<List<HeaderDto>> HeadersChanged { get; set; }
    public async void Remove(HeaderDto header)
    {
        Headers.Remove(header);
        await HeadersChanged.InvokeAsync(Headers);
    }

    public async void Add()
    {
        // todo: figure out how to 1. trigger edit event and 2. immediately force focus
        // when the user presses this button
        Headers.Add(new HeaderDto());
        await HeadersChanged.InvokeAsync(Headers);
    }
}
