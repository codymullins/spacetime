@using Spacetime.Core.gRPC;
@using Spacetime.Core.gRPC.Interfaces
@using Fluxor
@using Spacetime.Blazor.gRPC.Store

@inject IGrpcExplorer GrpcExplorer
@inject IDispatcher Dispatcher

<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="6">
                <MudTextField @bind-Value="URL"
                              Placeholder="URL"
                              Label="URL"
                              Variant="Variant.Outlined" />
                <div class="mb-2">
                    <MudButton OnClick="ValidateGrpc"
                               Size="Size.Small"
                               Color="Color.Success">
                        Validate Proto
                    </MudButton>

                    <MudButton OnClick="SaveProto"
                               Disabled="@(!CanSave())"
                               Size="Size.Small"
                               Color="Color.Primary">
                        Save Proto
                    </MudButton>
                </div>
            </MudItem>
            <MudItem xs="6">
                @if (GrpcExploreResult != null)
                {
                    <!-- todo: pagination -->
                    <!-- todo: filtering -->
                    <!-- todo: sorting -->
                    <MudTable Items="FlattenedServiceMap" Hover="true" FixedHeader="true" Height="600px">
                        <HeaderContent>
                            <MudTh>Service</MudTh>
                            <MudTh>Method</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Name">@context.ServiceName</MudTd>
                            <MudTd DataLabel="Value">@context.MethodName</MudTd>
                        </RowTemplate>
                    </MudTable>
                }
            </MudItem>
        </MudGrid>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    void Submit() => MudDialog?.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog?.Cancel();

    public string? ProtoFile { get; set; }
    public string? ImportPath { get; set; }
    public string? URL { get; set; }

    public GrpcExploreResult? GrpcExploreResult { get; set; }
    private List<FlattenedService> FlattenedServiceMap { get; set; } = new List<FlattenedService>();

    private async Task ValidateGrpc()
    {
        FlattenedServiceMap.Clear();

        if (string.IsNullOrWhiteSpace(URL))
        {
            return;
        }

        GrpcExploreResult = await GrpcExplorer.Explore(URL);

        foreach (var svc in GrpcExploreResult.Services)
        {
            foreach (var method in svc.Methods)
            {
                FlattenedServiceMap.Add(new FlattenedService { ServiceName = svc.Name, MethodName = method.Name });
            }
        }
    }

    private void SaveProto()
    {
        if (GrpcExploreResult == null)
        {
            return;
        }

        Dispatcher.Dispatch(new SaveServicesAction { Services = GrpcExploreResult.Services });
    }

    private bool CanSave()
    {
        return GrpcExploreResult != null && GrpcExploreResult.Services.Count > 0;
    }

    private class FlattenedService
    {
        public string? ServiceName { get; set; }
        public string? MethodName { get; set; }
    }
}
